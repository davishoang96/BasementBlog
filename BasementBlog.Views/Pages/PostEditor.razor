@page "/postEditor";
@page "/postEditor/{postId:int}"
@using BasementBlog.ViewModels;

 <MudContainer>
     <MudGrid>
         <!-- Title and Description inputs -->
         <MudItem xs="12" sm="12" md="12" lg="12" xl="12" class="mb-4">
             <MudTextField Label="Title" @bind-Value="@vm.PostTitle" />
         </MudItem>

         <MudItem xs="12" sm="12" md="12" lg="12" xl="12" class="mb-4">
             <MudTextField Label="Description" @bind-Value="@vm.PostDescription" />
         </MudItem>

         <!-- Body input and Preview text -->
         <MudItem xs="12" sm="6" md="6" lg="6" xl="6" class="mb-4">
            <MudTextField Multiline Rows="10" Immediate="true" AutoGrow Label="Body" @bind-Value="@vm.PostBody" />
         </MudItem>

         <MudItem xs="12" sm="6" md="6" lg="6" xl="6" class="mb-4">
             <div class="preview-container">
                 <h3>Preview</h3>
                 @((MarkupString)vm.PostPreview)
            </div>
        </MudItem>
    </MudGrid>
     <!-- Save button -->
     <MudItem xs="12" Class="floating-button">
         <MudFab Color="MudBlazor.Color.Primary" OnClick="@vm.SaveOrUpdatePostCommand" StartIcon="@Icons.Material.Filled.Save" />
     </MudItem>
</MudContainer>

@code
 {
    [Inject]
    private EditPostViewModel vm { get; set; }

    [Parameter]
    public int PostId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await vm.GetPostById(PostId);
    }
}