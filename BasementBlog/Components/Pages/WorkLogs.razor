@page "/worklogs";
@using BasementBlog.ViewModels;
@using BasementBlog.DTO;
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Worklogs</PageTitle>

 <MudContainer MaxWidth="MaxWidth.ExtraLarge">

     <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
         <MudTabPanel Text="Description">
            <MudTextField id="post-body" Class="fira-mono-regular"
                          Immediate="true" DisableUnderLine="true" AutoGrow 
                          @bind-Value="@vm.Body" />
         </MudTabPanel>
        <MudTabPanel Text="Preview">
            <MudText class="preview-container inter-text-field">
                @((MarkupString)vm.PreviewBody)
            </MudText>
        </MudTabPanel>
     </MudTabs>

     <MudGrid>
        <MudItem xs="12" Class="floating-button" Style="margin-right: -12px; margin-bottom: 30px">
            <MudDatePicker PickerVariant="PickerVariant.Static"
                           Rounded="true" DisableToolbar="true" hidden="@hideCalendar"
                           AdditionalDateClassesFunc="@((DateTime dt)=>(vm.WorkLogs.Any(s=>s.LoggedDate == dt.Date.ToString(Common.DefaultDateTimeFormat)) ? "red-text text-accent-4" : ""))"
                           @bind-Date="vm.SelectedDate" />
        </MudItem>
    </MudGrid>

   
     <!-- Save button -->
     <MudItem xs="12" Class="floating-button">
        <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
            <MudIconButton Icon="@Icons.Material.Filled.Save" OnClick="@vm.SaveOrUpdateWorkLog"></MudIconButton>
            <MudIconButton Icon="@Icons.Material.Filled.CalendarToday" OnClick="@ToggleCalendar"></MudIconButton>
        </MudButtonGroup>
     </MudItem>
</MudContainer>

@code{

    [Inject]
    private WorkLogsViewModel vm { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await vm.Setup();
    }

    bool hideCalendar = false;
    private void ToggleCalendar()
    {
        hideCalendar = !hideCalendar;
    }
}