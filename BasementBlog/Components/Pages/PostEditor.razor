@page "/postEditor";
@page "/postEditor/{postId}"
@using BasementBlog.ViewModels;
@using BasementBlog.DTO;
@attribute [Authorize(Roles = "Admin")]

 <MudContainer MaxWidth="MaxWidth.ExtraLarge">
     <MudGrid>

        <MudItem xs="12" sm="4" md="4" lg="4" xl="4" class="mb-4">
            <MudTextField Label="Title" @bind-Value="@vm.PostTitle" Variant="Variant.Text" />
        </MudItem>

        <MudItem xs="12" sm="4" md="4" lg="4" xl="4" class="mb-4">
            <MudTextField Label="Description" @bind-Value="@vm.PostDescription" Variant="Variant.Text" />

        </MudItem>

        <MudItem xs="12" sm="4" md="4" lg="4" xl="4">
            <MudAutocomplete T="CategoryDTO" Label="Category"
                             @bind-Value="@vm.SelectedCategory"
                             SearchFunc="@vm.SearchCategories"
                             ToStringFunc="@DisplayValue"
                             Variant="Variant.Text" />
        </MudItem>

        <MudItem xs="12" sm="6" md="6" lg="6" xl="6" class="mb-4">
            <MudTextField id="post-body" Class="fira-mono-regular"
                          Immediate="true"
                          DisableUnderLine="true"
                          AutoGrow Label="Body"
                          @bind-Value="@vm.PostBody" />
        </MudItem>

        <MudItem xs="12" sm="6" md="6" lg="6" xl="6" class="mb-4">
            <div class="preview-container">
                @((MarkupString)vm.PostPreview)
            </div>
        </MudItem>

    </MudGrid>
     <!-- Save button -->
     <MudItem xs="12" Class="floating-button">
         <MudFab Color="MudBlazor.Color.Primary" OnClick="@vm.SaveOrUpdatePostCommand" StartIcon="@Icons.Material.Filled.Save" />
     </MudItem>
</MudContainer>

@code
{
    [Inject]
    private EditPostViewModel vm { get; set; }

    [Parameter]
    public string PostId { get; set; }

    private Func<CategoryDTO, string?> DisplayValue = item => item is null ? null : item.Name;

    protected override async Task OnInitializedAsync()
    {
        await vm.GetCategories();
        await vm.GetPostById(PostId);
    }
}