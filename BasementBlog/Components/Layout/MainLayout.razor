@inherits LayoutComponentBase

<MudThemeProvider IsDarkMode="true" Theme="_theme" DefaultScrollbar="true" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Fixed="true" Dense="true">
        <MudMenu Label="Open Menu" Variant="Variant.Outlined" Icon="@Icons.Material.Filled.Menu">
            <MudMenuItem Href="/" Icon="@Icons.Material.Filled.Home">Home</MudMenuItem>
            <AuthorizeView Roles="Admin">
                <Authorized>
                    <MudMenuItem Href="/dashboard" Icon="@Icons.Material.Filled.Create">Dashboard</MudMenuItem>
                    <MudMenuItem Href="/" Icon="@Icons.Material.Filled.List">Work Logs</MudMenuItem>
                </Authorized>
            </AuthorizeView>
            <MudMenuItem Href="/about" Icon="@Icons.Material.Filled.ContactMail">Resume</MudMenuItem>
        </MudMenu>
        <MudSpacer />
        @* <MudSwitch @bind-Checked="@_isDarkMode" Color="MudBlazor.Color.Primary" Class="ma-4" T="bool" Label="@DarkModeToggleText" /> *@
        <AuthorizeView>
            <Authorized>        
                <MudIconButton Icon="@Icons.Outlined.Logout" Color="MudBlazor.Color.Inherit" Link="Account/Logout" Target="_blank" />
            </Authorized>
            <NotAuthorized>
                <MudIconButton Icon="@Icons.Outlined.Login" Color="MudBlazor.Color.Inherit" Link="Account/Login?redirectUri=/" Target="_blank" />
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    private MudTheme _theme = new()
    {
        // Palette = new PaletteLight()
        // {
        //     Primary = Colors.Blue.Darken1,
        //     Secondary = Colors.Green.Accent4,
        //     AppbarBackground = Colors.Blue.Darken4,
        // },
        PaletteDark = new PaletteDark()
        {
            Primary = Colors.Blue.Lighten1,
            Background = "#0d1117",
        },
    };

    protected override void OnInitialized()
    {
        // _isDarkMode = true;
        _drawerOpen = true;
    }

    // public string DarkModeToggleText => _isDarkMode ? "Dark" : "Light";

    public bool _drawerOpen { get; set; }

    // public bool _isDarkMode { get; set; }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}

