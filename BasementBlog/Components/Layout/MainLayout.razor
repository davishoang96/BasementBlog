@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" DefaultScrollbar="true" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Fixed="true" Dense="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="MudBlazor.Color.Secondary" Edge="Edge.Start" OnClick="@DrawerToggle" />
        <MudSpacer />
        <MudSwitch @bind-Checked="@_isDarkMode" Color="MudBlazor.Color.Primary" Class="ma-4" T="bool" Label="@DarkModeToggleText" />
        <AuthorizeView>
            <Authorized>        
                <MudIconButton Icon="@Icons.Outlined.Logout" Color="MudBlazor.Color.Inherit" Link="Account/Logout" Target="_blank" />
            </Authorized>
            <NotAuthorized>
                <MudIconButton Icon="@Icons.Outlined.Login" Color="MudBlazor.Color.Inherit" Link="Account/Login?redirectUri=/" Target="_blank" />
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {

    private MudTheme _theme = new();
    protected override void OnInitialized()
    {
        _isDarkMode = true;
        _drawerOpen = true;
    }

    public string DarkModeToggleText => _isDarkMode ? "Dark" : "Light";

    public bool _drawerOpen { get; set; }

    public bool _isDarkMode { get; set; }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}

