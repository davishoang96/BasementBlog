// <auto-generated />
using System;
using BasementBlog.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BasementBlog.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("BasementBlog.Database.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BasementBlog.Database.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Test",
                            Description = "Test",
                            ModifiedDate = new DateTime(2024, 3, 1, 0, 2, 30, 335, DateTimeKind.Local).AddTicks(720),
                            PublishDate = new DateTime(2024, 3, 1, 0, 2, 30, 335, DateTimeKind.Local).AddTicks(730),
                            Title = "Make the world better"
                        },
                        new
                        {
                            Id = 2,
                            Body = "Test",
                            Description = "Test",
                            ModifiedDate = new DateTime(2024, 3, 1, 0, 2, 30, 335, DateTimeKind.Local).AddTicks(732),
                            PublishDate = new DateTime(2024, 3, 1, 0, 2, 30, 335, DateTimeKind.Local).AddTicks(732),
                            Title = "AI take over the world"
                        },
                        new
                        {
                            Id = 3,
                            Body = "Test",
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum",
                            ModifiedDate = new DateTime(2024, 3, 1, 0, 2, 30, 335, DateTimeKind.Local).AddTicks(734),
                            PublishDate = new DateTime(2024, 3, 1, 0, 2, 30, 335, DateTimeKind.Local).AddTicks(734),
                            Title = "Lorem Ipsum"
                        },
                        new
                        {
                            Id = 4,
                            Body = "Test",
                            Description = "Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots",
                            ModifiedDate = new DateTime(2024, 3, 1, 0, 2, 30, 335, DateTimeKind.Local).AddTicks(736),
                            PublishDate = new DateTime(2024, 3, 1, 0, 2, 30, 335, DateTimeKind.Local).AddTicks(736),
                            Title = "Where does it come from?"
                        },
                        new
                        {
                            Id = 5,
                            Body = "Test",
                            Description = "Lorem Ipsum is not simply random text. It has roots",
                            ModifiedDate = new DateTime(2024, 3, 1, 0, 2, 30, 335, DateTimeKind.Local).AddTicks(737),
                            PublishDate = new DateTime(2024, 3, 1, 0, 2, 30, 335, DateTimeKind.Local).AddTicks(738),
                            Title = "Create post and add catetory"
                        });
                });

            modelBuilder.Entity("BasementBlog.Database.Models.Post", b =>
                {
                    b.HasOne("BasementBlog.Database.Models.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BasementBlog.Database.Models.Category", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
